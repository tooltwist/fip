apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'artifactory'
apply plugin: 'maven' // so a POM file can be uploaded to repo

dependencies {
	compile group: 'xalan', name: 'xalan', version: '2.7.1'
	compile 'commons-codec:commons-codec:1.8'
	compile 'commons-fileupload:commons-fileupload:1.3'
	compile 'org.slf4j:slf4j-api:1.7.5'
	compile 'org.apache.httpcomponents:fluent-hc:4.2.5'
	compile 'commons-httpclient:commons-httpclient:3.1'
	testCompile group: 'junit', name: 'junit', version: '4.8.2'
}


/**************************************************************************************************
 *
 *	NOTE: Standard code from here on down.
 *
 */
group = PROJECT_GROUP
version = PROJECT_VERSION
sourceCompatibility = PROJECT_SOURCE_COMPATIBILITY

// Remember whether this is a snapshot or release, so we publish to the correct repository.
project.ext.isSnapshot = version.endsWith("-SNAPSHOT")

// Include jars for the artifactory plugin
buildscript {
    repositories {
        maven { url 'http://jcenter.bintray.com' }
    }
    dependencies {
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '2.0.9')
    }
}

configurations {
        published
}

artifactory {
    publish {
        repository {
            contextUrl = "${PUBLISH_CONTEXTURL}"
            repoKey = isSnapshot ? "${PUBLISH_SNAPSHOT_REPO}" : "${PUBLISH_RELEASE_REPO}"
            username = "${ARTIFACTORY_USER}"
            password = "${ARTIFACTORY_PASSWORD}"
            maven = true
	    ivy {
	      ivyLayout = '[organization]/[module]/ivy-[revision].xml'
	      artifactLayout = '[organization]/[module]/[revision]/[module]-[revision](-[classifier]).[ext]'
	      mavenCompatible = true
	    }
        }
	defaults {
	    publishConfigs('archives', 'published')
	    properties = ['build.status': "$it.project.status".toString()]
	}
    }
    resolve {
        repository {
            contextUrl = "${RESOLVE_CONTEXTURL}"
            repoKey = "${RESOLVE_REPO}"
            username = "${ARTIFACTORY_USER}"
            password = "${ARTIFACTORY_PASSWORD}"
            maven = true
        }
    }
}


// Note that tests only get run when the code changes
test {
    testLogging {
        // Show that tests are run in the command-line output
	events "passed", "skipped", "failed"
    }
}

// The Gradle wrapper allows building without Gradle installed
// See http://www.gradle.org/docs/current/userguide/gradle_wrapper.html
task wrapper(type: Wrapper) {
  gradleVersion = '1.12'
}
